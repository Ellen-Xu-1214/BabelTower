{"ast":null,"code":"import _toConsumableArray from \"/Users/junlinghu/Desktop/Fall 2019/Software Engineering/Shards-Dashboard-Lite-React-1.0.0/Source Files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/junlinghu/Desktop/Fall 2019/Software Engineering/Shards-Dashboard-Lite-React-1.0.0/Source Files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/junlinghu/Desktop/Fall 2019/Software Engineering/Shards-Dashboard-Lite-React-1.0.0/Source Files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/junlinghu/Desktop/Fall 2019/Software Engineering/Shards-Dashboard-Lite-React-1.0.0/Source Files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/junlinghu/Desktop/Fall 2019/Software Engineering/Shards-Dashboard-Lite-React-1.0.0/Source Files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/junlinghu/Desktop/Fall 2019/Software Engineering/Shards-Dashboard-Lite-React-1.0.0/Source Files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/junlinghu/Desktop/Fall 2019/Software Engineering/Shards-Dashboard-Lite-React-1.0.0/Source Files/src/views/Errors.js\";\nimport React from \"react\";\nimport axios from 'axios';\nimport Pusher from 'pusher-js';\nimport { Container, Button } from \"shards-react\";\nimport ChatList from '../components/notifications/ChatList';\nimport ChatBox from '../components/notifications/ChatBox';\n\nvar Errors = function Errors() {\n  return React.createElement(Container, {\n    fluid: true,\n    className: \"main-content-container px-4 pb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(Notification, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }));\n};\n\nvar Notification =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Notification, _React$Component);\n\n  function Notification(props) {\n    var _this;\n\n    _classCallCheck(this, Notification);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Notification).call(this, props));\n    _this.state = {\n      text: '',\n      username: '',\n      chats: []\n    };\n    return _this;\n  }\n\n  _createClass(Notification, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var username = window.prompt('Username: ', 'Anonymous');\n      this.setState({\n        username: username\n      });\n      var pusher = new Pusher('YOUR_PUSHER_APP_KEY', {\n        cluster: 'YOUR_CLUSTER',\n        encrypted: true\n      });\n      var channel = pusher.subscribe('chat');\n      channel.bind('message', function (data) {\n        _this2.setState({\n          chats: [].concat(_toConsumableArray(_this2.state.chats), [data]),\n          test: ''\n        });\n      });\n      this.handleTextChange = this.handleTextChange.bind(this);\n    }\n  }, {\n    key: \"handleTextChange\",\n    value: function handleTextChange(e) {\n      if (e.keyCode === 13) {\n        var payload = {\n          username: this.state.username,\n          message: this.state.text\n        };\n        axios.post('http://localhost:5000/message', payload);\n      } else {\n        this.setState({\n          text: e.target.value\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(ChatList, {\n        chats: this.state.chats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(ChatBox, {\n        text: this.state.text,\n        username: this.state.username,\n        handleTextChange: this.handleTextChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Notification;\n}(React.Component);\n\nexport default Errors;","map":{"version":3,"sources":["/Users/junlinghu/Desktop/Fall 2019/Software Engineering/Shards-Dashboard-Lite-React-1.0.0/Source Files/src/views/Errors.js"],"names":["React","axios","Pusher","Container","Button","ChatList","ChatBox","Errors","Notification","props","state","text","username","chats","window","prompt","setState","pusher","cluster","encrypted","channel","subscribe","bind","data","test","handleTextChange","e","keyCode","payload","message","post","target","value","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,cAAlC;AAEA,OAAOC,QAAP,MAAqB,sCAArB;AACA,OAAOC,OAAP,MAAoB,qCAApB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,SACb,oBAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAiB,IAAA,SAAS,EAAC,kCAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADa;AAAA,CAAf;;IAOMC,Y;;;;;AACJ,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,sFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAFiB;AAOlB;;;;wCAEmB;AAAA;;AAClB,UAAMD,QAAQ,GAAGE,MAAM,CAACC,MAAP,CAAc,YAAd,EAA4B,WAA5B,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,QAAQ,EAARA;AAAF,OAAd;AACA,UAAMK,MAAM,GAAG,IAAIf,MAAJ,CAAW,qBAAX,EAAkC;AAC/CgB,QAAAA,OAAO,EAAE,cADsC;AAE/CC,QAAAA,SAAS,EAAE;AAFoC,OAAlC,CAAf;AAIA,UAAMC,OAAO,GAAGH,MAAM,CAACI,SAAP,CAAiB,MAAjB,CAAhB;AACAD,MAAAA,OAAO,CAACE,IAAR,CAAa,SAAb,EAAwB,UAAAC,IAAI,EAAI;AAC9B,QAAA,MAAI,CAACP,QAAL,CAAc;AAAEH,UAAAA,KAAK,+BAAM,MAAI,CAACH,KAAL,CAAWG,KAAjB,IAAwBU,IAAxB,EAAP;AAAsCC,UAAAA,IAAI,EAAE;AAA5C,SAAd;AACD,OAFD;AAGA,WAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBH,IAAtB,CAA2B,IAA3B,CAAxB;AACD;;;qCAEgBI,C,EAAG;AAClB,UAAIA,CAAC,CAACC,OAAF,KAAc,EAAlB,EAAsB;AACpB,YAAMC,OAAO,GAAG;AACdhB,UAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE,QADP;AAEdiB,UAAAA,OAAO,EAAE,KAAKnB,KAAL,CAAWC;AAFN,SAAhB;AAIAV,QAAAA,KAAK,CAAC6B,IAAN,CAAW,+BAAX,EAA4CF,OAA5C;AACD,OAND,MAMO;AACL,aAAKZ,QAAL,CAAc;AAAEL,UAAAA,IAAI,EAAEe,CAAC,CAACK,MAAF,CAASC;AAAjB,SAAd;AACD;AACF;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWG,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,OAAD;AACE,QAAA,IAAI,EAAE,KAAKH,KAAL,CAAWC,IADnB;AAEE,QAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE,QAFvB;AAGE,QAAA,gBAAgB,EAAE,KAAKa,gBAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,CADF;AAYD;;;;EAjDwBzB,KAAK,CAACiC,S;;AAqDjC,eAAe1B,MAAf","sourcesContent":["import React from \"react\";\nimport axios from 'axios';\nimport Pusher from 'pusher-js';\nimport { Container, Button } from \"shards-react\";\n\nimport ChatList from '../components/notifications/ChatList';\nimport ChatBox from '../components/notifications/ChatBox';\n\nconst Errors = () => (\n  <Container fluid className=\"main-content-container px-4 pb-4\">\n    <Notification />\n  </Container>\n);\n\n\nclass Notification extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '',\n      username: '',\n      chats: []\n    };\n  }\n\n  componentDidMount() {\n    const username = window.prompt('Username: ', 'Anonymous');\n    this.setState({ username });\n    const pusher = new Pusher('YOUR_PUSHER_APP_KEY', {\n      cluster: 'YOUR_CLUSTER',\n      encrypted: true\n    });\n    const channel = pusher.subscribe('chat');\n    channel.bind('message', data => {\n      this.setState({ chats: [...this.state.chats, data], test: '' });\n    });\n    this.handleTextChange = this.handleTextChange.bind(this);\n  }\n\n  handleTextChange(e) {\n    if (e.keyCode === 13) {\n      const payload = {\n        username: this.state.username,\n        message: this.state.text\n      };\n      axios.post('http://localhost:5000/message', payload);\n    } else {\n      this.setState({ text: e.target.value });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <section>\n          <ChatList chats={this.state.chats} />\n          <ChatBox\n            text={this.state.text}\n            username={this.state.username}\n            handleTextChange={this.handleTextChange}\n          />\n        </section>\n      </div>\n    );\n  }\n}\n\n\nexport default Errors;\n"]},"metadata":{},"sourceType":"module"}